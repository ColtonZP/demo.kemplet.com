{"version":3,"sources":["images/add.svg","components/CalendarInput.js","components/Add.js","components/Menu.js","components/Today.js","components/Todo.js","components/TodoList.js","components/Options.js","components/TaskDetail.js","components/App.js","index.js","functions/kemplet-date.js"],"names":["module","exports","CalendarInput","props","state","month","Date","getMonth","today","getDate","year","getFullYear","actualMonth","actualYear","direction","this","setState","showing","handleDue","toggle","daysInMonth","firstDay","getDay","days","i","onCurrentMonth","className","style","maxHeight","type","value","onClick","updateMonth","gridColumnEnd","textAlign","map","day","key","gridColumnStart","join","calendarMap","Component","Add","updateTitle","e","title","target","toggleCalendar","arg","undefined","showingCalendar","updateDue","due","handleSubmit","preventDefault","todoLists","addTask","selected","dateToday","tomorrow","name","autoComplete","onChange","required","onFocus","Menu","useState","displayAdd","toggleAdd","src","add","alt","Today","tasks","date","Intl","DateTimeFormat","weekday","format","dueToday","filter","obj","toDateString","length","task","id","Todo","todo","completed","updateCompleted","useEffect","readOnly","checked","TodoList","updateInput","list","todos","push","placeholder","Options","TaskDetail","adding","removeTask","titleInput","slice","onSubmit","App","changeTaskId","viewTaskId","quickId","openTask","complete","setHours","ReactDOM","render","document","getElementById","toString"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,iC,uNC2J5BC,E,kDAvJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAO,IAAIC,MAAOC,WAClBC,OAAO,IAAIF,MAAOG,UAClBC,MAAM,IAAIJ,MAAOK,cACjBC,aAAa,IAAIN,MAAOC,WACxBM,YAAY,IAAIP,MAAOK,eAPR,E,wDAWPG,GACQ,WAAdA,IACuB,KAArBC,KAAKX,MAAMC,MACbU,KAAKC,SAAS,CACZX,MAAO,EACPK,KAAMK,KAAKX,MAAMM,KAAO,IAG1BK,KAAKC,SAAS,CACZX,MAAOU,KAAKX,MAAMC,MAAQ,KAId,YAAdS,IACuB,IAArBC,KAAKX,MAAMC,MACbU,KAAKC,SAAS,CACZX,MAAO,GACPK,KAAMK,KAAKX,MAAMM,KAAO,IAG1BK,KAAKC,SAAS,CACZX,MAAOU,KAAKX,MAAMC,MAAQ,O,+BA2BhC,IArBQ,IAAD,SACiDU,KAAKX,MAArDC,EADD,EACCA,MAAOG,EADR,EACQA,MAAOE,EADf,EACeA,KAAME,EADrB,EACqBA,YAAaC,EADlC,EACkCA,WADlC,EAEgCE,KAAKZ,MAApCc,EAFD,EAECA,QAASC,EAFV,EAEUA,UAAWC,EAFrB,EAEqBA,OACtBC,EAAc,IAAId,KAAKI,EAAML,EAAQ,EAAG,GAAGI,UAC3CY,EAAW,IAAIf,KAAKI,EAAML,EAAO,GAAGiB,SAetCC,EAAO,GAEFC,EAAI,EAAGA,GAAKJ,EAAaI,IAChCD,EAAI,sBAAOA,GAAP,CAAaC,IAyCnB,IAAMC,EACJb,IAAgBP,GAASQ,IAAeH,GAAQ,WAElD,OACE,yBACEgB,UAAU,gBACVC,MAAO,CAAEC,UAAWX,EAAU,OAAS,IAEvC,yBAAKS,UAAU,oBACb,2BACEG,KAAK,SACLC,MAAM,IACNJ,UAAWD,EACXM,QAAS,kBAAM,EAAKC,YAAY,cAElC,0BACEN,UAAU,QACVC,MAAO,CACLM,cAAe,SACfC,UAAW,WAJf,UAzES,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAmEgB7B,GANZ,aAMuBK,IACvB,2BACEmB,KAAK,SACLC,MAAM,IACNC,QAAS,kBAAM,EAAKC,YAAY,cAIpC,yBAAKN,UAAU,SACb,0BAAMA,UAAU,OAAhB,OACA,0BAAMA,UAAU,OAAhB,OACA,0BAAMA,UAAU,OAAhB,OACA,0BAAMA,UAAU,OAAhB,OACA,0BAAMA,UAAU,OAAhB,OACA,0BAAMA,UAAU,OAAhB,OACA,0BAAMA,UAAU,OAAhB,OACCH,EAAKY,KAAI,SAACC,GAAD,OA3EhB,SAAqBA,GACnB,OAAIA,EAAM5B,GAASI,IAAgBP,GAASQ,IAAeH,EAC7C,IAAR0B,EAEA,0BAAMC,IAAKD,EAAKT,MAAO,CAAEW,gBAAiBjB,IACvCe,GAIA,0BAAMC,IAAKD,GAAMA,GAEd,IAARA,EAEA,2BACEP,KAAK,SACLC,MAAOM,EACPC,IAAKD,EACLT,MAAO,CAAEW,gBAAiBjB,GAC1BU,QAAS,WACPb,EAAU,CAACb,EAAQ,EAAG+B,EAAK1B,GAAM6B,KAAK,MACtCpB,OAMN,2BACEU,KAAK,SACLC,MAAOM,EACPC,IAAKD,EACLL,QAAS,WACPb,EAAU,CAACb,EAAQ,EAAG+B,EAAK1B,GAAM6B,KAAK,MACtCpB,OA2CiBqB,CAAYJ,Y,GA3IbK,aCuIbC,E,kDAlIb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IASRwC,YAAc,SAACC,GACb,EAAK5B,SAAS,CACZ6B,MAAOD,EAAEE,OAAOhB,SAZD,EAgBnBiB,eAAiB,SAACC,QACJC,IAARD,EACF,EAAKhC,SAAS,CAAEkC,gBAAiBF,IAEjC,EAAKhC,SAAS,CAAEkC,iBAAkB,EAAK9C,MAAM8C,mBApB9B,EAwBnBC,UAAY,SAACP,GACX,EAAK5B,SAAS,CACZoC,IAAKR,EAAEE,OAAOhB,SA1BC,EA8BnBuB,aAAe,SAACT,GACdA,EAAEU,iBADkB,MAEc,EAAKlD,MAA/ByC,EAFY,EAEZA,MAAOU,EAFK,EAELA,UAAWH,EAFN,EAEMA,IAFN,EAGQ,EAAKjD,MAAzBqD,EAHY,EAGZA,QAASrC,EAHG,EAGHA,OACb0B,IACFW,EAAQ,CACNX,QACAU,YACAH,QAEFjC,MAxCe,EA4CnBD,UAAY,SAACuC,GACX,EAAKzC,SAAS,CAAEoC,IAAKK,KA3CrB,EAAKrD,MAAQ,CACXyC,MAAO,GACPU,UAAW,GACXH,IAAK,GACLF,iBAAiB,GANF,E,qDAgDT,IAAD,SACgBnC,KAAKX,MAApByC,EADD,EACCA,MAAOO,EADR,EACQA,IACT5C,EAAQkD,oBAAU,GAClBC,EAAWD,oBAAU,GAE3B,OACE,yBAAKhC,UAAU,SACb,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,eACb,2BACEG,KAAK,OACL+B,KAAK,QACLC,aAAa,MACb/B,MAAOe,EACPiB,SAAU/C,KAAK4B,YACfoB,UAAQ,IAEV,yCAGF,yBAAKrC,UAAU,eACb,2BACEG,KAAK,OACL+B,KAAK,MACLlC,UAAU,YACVmC,aAAa,MACb/B,MAAOsB,EACPW,UAAQ,EACRC,QAAS,kBAAM,EAAKjB,gBAAe,MAErC,uCAEF,kBAAC,EAAD,CACE9B,QAASF,KAAKX,MAAM8C,gBACpBhC,UAAWH,KAAKG,UAChBC,OAAQJ,KAAKgC,iBAEf,yBAAKrB,UAAU,cACb,2BACEA,UAAU,SACVG,KAAK,SACLC,MAAM,OACNC,QAAS,WACP,EAAKb,UAAU,IACf,EAAK6B,gBAAe,MAGxB,2BACElB,KAAK,SACLC,MAAM,QACNC,QAAS,WACP,EAAKb,UAAUV,GACf,EAAKuC,gBAAe,MAGxB,2BACElB,KAAK,SACLC,MAAM,WACNC,QAAS,WACP,EAAKb,UAAUyC,GACf,EAAKZ,gBAAe,OAI1B,2BACErB,UAAU,YACVG,KAAK,SACLC,MAAM,MACNC,QAAShB,KAAKsC,gBAGlB,yBAAK3B,UAAU,kBAAkBK,QAAShB,KAAKZ,MAAMgB,c,GAxH3CsB,aCuBHwB,MAvBf,SAAc9D,GAAQ,IAAD,EACa+D,oBAAS,GADtB,mBACZC,EADY,KACAC,EADA,KAEXZ,EAAYrD,EAAZqD,QAEFrC,EAAS,WACbiD,GAAWD,IAGb,OACE,yBAAKzC,UAAU,QAEb,4BAAQA,UAAU,SAASG,KAAK,SAASE,QAAS,kBAAMZ,MACtD,yBAAKkD,IAAKC,IAAKC,IAAI,gBAEpBJ,GAAc,kBAAC,EAAD,CAAKhD,OAAQA,EAAQqC,QAASA,MCcpCgB,MAjCf,YAA2B,IAAVC,EAAS,EAATA,MAQTC,EAAO,IAAIC,KAAKC,eAAe,QAPjB,CAClBC,QAAS,OACTnE,KAAM,UACNL,MAAO,OACP+B,IAAK,YAGoD0C,OAAO,IAAIxE,MAMhEyE,EAAWN,EAAMO,QAJvB,SAAeC,GACb,OAAO,IAAI3E,KAAK2E,EAAI7B,KAAK8B,kBAAmB,IAAI5E,MAAO4E,kBAKzD,OACE,yBAAKxD,UAAU,cACb,sCAAQgD,IACPK,EAASI,QAAU,GAClB,yBAAKzD,UAAU,YACb,0BAAMA,UAAU,YAAhB,aACA,4BACGqD,EAAS5C,KAAI,SAACiD,GAAD,OACZ,wBAAI/C,IAAK+C,EAAKC,IAAKD,EAAKvC,c,QCEvByC,MAzBf,SAAcnF,GAAQ,IACZoF,EAASpF,EAAToF,KADW,EAEkBrB,mBAASqB,EAAKC,WAFhC,mBAEZA,EAFY,KAEDC,EAFC,KAQnB,OAJAC,qBAAU,WACRH,EAAKC,UAAYA,KAIjB,wBAAI9D,UAAU,aACZ,2BACEG,KAAK,WACL8D,UAAQ,EACRC,QAASJ,EACTzD,QAAS,kBAAM0D,GAAiBD,MAElC,+BAAQD,EAAKA,QC+CJM,E,kDA7Db,WAAY1F,GAAQ,IAAD,8BACjB,cAAMA,IASR2F,YAAc,SAAClD,GACb,EAAK5B,SAAS,CACZuE,KAAK,eAAM,EAAKnF,MAAMmF,KAAlB,CAAwBA,KAAM3C,EAAEE,OAAOhB,WAZ5B,EAgBnBuB,aAAe,SAACT,GACdA,EAAEU,iBADkB,IAEZiC,EAAS,EAAKnF,MAAdmF,KACS,EAAKpF,MAAd4F,KACHC,MAAMC,KAAKV,GAChB,EAAKvE,SAAS,CACZuE,KAAM,CAAEA,KAAM,GAAIC,WAAW,MApB/B,EAAKpF,MAAQ,CACXmF,KAAM,CACJA,KAAM,GACNC,WAAW,IALE,E,qDA0BT,IACAO,EAAShF,KAAKZ,MAAd4F,KACAR,EAASxE,KAAKX,MAAdmF,KAGR,OACE,yBAAK7D,UAAU,YACb,4BAAKqE,EAAKlD,OACV,4BACGkD,EAAKC,MAAM7D,KAAI,SAACoD,GAAD,OACd,kBAAC,EAAD,CAAMA,KAAMA,EAAMlD,IAAKkD,EAAKA,UAE9B,8BACE,2BACE1D,KAAK,OACL+B,KAAK,UACLlC,UAAU,UACVmC,aAAa,MACbqC,YAAY,WACZpE,MAAOyD,EAAKA,KACZzB,SAAU/C,KAAK+E,cAEjB,2BACEpE,UAAU,aACVG,KAAK,SACLC,MAAM,IACNC,QAAShB,KAAKsC,sB,GArDLZ,aCiBR0D,ICoDAC,E,kDAjEb,WAAYjG,GAAQ,IAAD,8BACjB,cAAMA,IAMR2F,YAAc,SAAClD,GACb,EAAK5B,SAAS,CACZ6B,MAAOD,EAAEE,OAAOhB,SATD,EAanBuB,aAAe,SAACT,GACdA,EAAEU,iBACF,IAAI+C,EAAS,CACXxD,MAAO,EAAKzC,MAAMyC,MAClBmD,MAAO,IAET,EAAK7F,MAAMiF,KAAK7B,UAAU0C,KAAKI,GAC/B,EAAKrF,SAAS,CACZ6B,MAAO,MAnBT,EAAKzC,MAAQ,CACXyC,MAAO,IAHQ,E,qDAyBT,IAAD,EACsB9B,KAAKZ,MAA1BiF,EADD,EACCA,KAAMkB,EADP,EACOA,WAEd,OACE,yBAAK5E,UAAU,4BAEb,yBAAKA,UAAU,eAEb,wBAAIK,QAAShB,KAAKwF,YAAanB,EAAKvC,OACpC,2BACEhB,KAAK,SACLC,MAAM,SACNJ,UAAU,SACVK,QAAS,kBAAMuE,EAAWlB,EAAKC,OAEjC,6CAAeD,EAAKhC,IAAIoD,MAAM,GAAI,KAClC,0BAAMC,SAAU1F,KAAKsC,cACnB,2BACExB,KAAK,OACLC,MAAOf,KAAKX,MAAMyC,MAClBiB,SAAU/C,KAAK+E,YACfpE,UAAU,aAEZ,2BAAOG,KAAK,SAASC,MAAM,cAE7B,yBAAKJ,UAAU,aACZ0D,EAAK7B,UAAUpB,KAAI,SAAC4D,GAAD,OAClB,kBAAC,EAAD,CAAUA,KAAMA,EAAM1D,IAAK0D,EAAKlD,kB,GArDrBJ,aCEJiE,E,kDACnB,aAAe,IAAD,8BACZ,gBAyCFC,aAAe,SAACtB,GACd,EAAKrE,SAAS,CAAE4F,WAAYvB,KA3ChB,EA8Cd7B,QAAU,SAAC4B,GAAU,IACXX,EAAU,EAAKrE,MAAfqE,MACRW,EAAKC,GAAKwB,oBACV,EAAK7F,SAAS,CACZyD,MAAM,GAAD,mBAAMA,GAAN,CAAaW,IAClB0B,SAAU1B,KAnDA,EAuDd0B,SAAW,SAAC1B,GACV,EAAKpE,SAAS,CACZ8F,SAAU1B,KAzDA,EA6DdkB,WAAa,SAACjB,GACZ,EAAKrE,SAAS,CACZyD,MAAO,EAAKrE,MAAMqE,MAAMO,QAAO,SAACI,GAAD,OAAUA,EAAKC,KAAOA,KACrDyB,SAAU,MA9DZ,EAAK1G,MAAQ,CACXqE,MAAO,CACL,CACE5B,MAAO,UACPO,IAAKM,oBAAU,GACf2B,GAAI,UACJ0B,UAAU,EACVxD,UAAW,CACT,CACEV,MAAO,cACPwC,GAAI,iBACJG,WAAW,EACXQ,MAAO,CACL,CACET,KACE,sEACFC,WAAW,KAIjB,CACE3C,MAAO,kBACPwC,GAAI,iBACJG,WAAW,EACXQ,MAAO,CACL,CACET,KACE,8EACFC,WAAW,QAOvBT,SAAU,GACV+B,SAAU,IAtCA,E,gEAqEZ/F,KAAKX,MAAMqE,MAAM,IAAM1D,KAAK+F,SAAS/F,KAAKX,MAAMqE,MAAM,M,+BAG9C,IAAD,SACqB1D,KAAKX,MAAzBqE,EADD,EACCA,MAAOqC,EADR,EACQA,SACXtG,EAAQ,IAAIF,KAEhB,OADAE,EAAMwG,SAAS,EAAG,EAAG,EAAG,GAEtB,yBAAKtF,UAAU,OACb,kBAAC,EAAD,CAAM8B,QAASzC,KAAKyC,UACpB,yBAAK9B,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAO+C,MAAOA,IACbA,EAAMtC,KAAI,SAACiD,GAAD,OACT,yBACE/C,IAAK+C,EAAKC,GACV3D,UAAU,gBACVG,KAAK,SACLE,QAAS,WACP,EAAK+E,SAAS1B,KAGhB,6BAAMA,EAAKvC,OACV,IAAIvC,KAAK8E,EAAKhC,KAAK8B,iBACpB1E,EAAM0E,eACJ,0BAAMxD,UAAU,YAAhB,SAEA,8BAAO0D,EAAKhC,IAAIoD,MAAM,GAAI,SAKjCM,EAASjE,OACR,kBAAC,EAAD,CAAYuC,KAAM0B,EAAUR,WAAYvF,KAAKuF,qB,GAzG5B7D,aCJjCwE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,gBCLjDnH,EAAQyD,UAAY,SAACY,GACnB,IAAMI,EAAO,IAAIpE,KAKjB,MADmB,EAHNoE,EAAKnE,WAAa,GAAG8G,WACxB3C,EAAKjE,UAAY6D,EACdI,EAAK/D,eACoB4B,KAAK,Q","file":"static/js/main.4161dccf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.a8357920.svg\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass CalendarInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: new Date().getMonth(),\n      today: new Date().getDate(),\n      year: new Date().getFullYear(),\n      actualMonth: new Date().getMonth(),\n      actualYear: new Date().getFullYear(),\n    };\n  }\n\n  updateMonth(direction) {\n    if (direction === \"ascend\") {\n      if (this.state.month === 11) {\n        this.setState({\n          month: 0,\n          year: this.state.year + 1,\n        });\n      } else {\n        this.setState({\n          month: this.state.month + 1,\n        });\n      }\n    }\n    if (direction === \"descend\") {\n      if (this.state.month === 0) {\n        this.setState({\n          month: 11,\n          year: this.state.year - 1,\n        });\n      } else {\n        this.setState({\n          month: this.state.month - 1,\n        });\n      }\n    }\n  }\n\n  render() {\n    const { month, today, year, actualMonth, actualYear } = this.state;\n    const { showing, handleDue, toggle } = this.props;\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const firstDay = new Date(year, month, 1).getDay();\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [];\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      days = [...days, i];\n    }\n\n    function calendarMap(day) {\n      if (day < today && actualMonth === month && actualYear === year) {\n        if (day === 1) {\n          return (\n            <span key={day} style={{ gridColumnStart: firstDay }}>\n              {day}\n            </span>\n          );\n        }\n        return <span key={day}>{day}</span>;\n      }\n      if (day === 1) {\n        return (\n          <input\n            type=\"button\"\n            value={day}\n            key={day}\n            style={{ gridColumnStart: firstDay }}\n            onClick={() => {\n              handleDue([month + 1, day, year].join(\"/\"));\n              toggle();\n            }}\n          />\n        );\n      }\n      return (\n        <input\n          type=\"button\"\n          value={day}\n          key={day}\n          onClick={() => {\n            handleDue([month + 1, day, year].join(\"/\"));\n            toggle();\n          }}\n        />\n      );\n    }\n\n    const onCurrentMonth =\n      actualMonth === month && actualYear === year && \"disabled\";\n\n    return (\n      <div\n        className=\"calendarInput\"\n        style={{ maxHeight: showing ? \"20em\" : 0 }}\n      >\n        <div className=\"calendarControls\">\n          <input\n            type=\"button\"\n            value=\"<\"\n            className={onCurrentMonth}\n            onClick={() => this.updateMonth(\"descend\")}\n          />\n          <span\n            className=\"month\"\n            style={{\n              gridColumnEnd: \"span 5\",\n              textAlign: \"center\",\n            }}\n          >{`${months[month]}, ${year}`}</span>\n          <input\n            type=\"button\"\n            value=\">\"\n            onClick={() => this.updateMonth(\"ascend\")}\n          />\n        </div>\n\n        <div className=\"sheet\">\n          <span className=\"day\">Mon</span>\n          <span className=\"day\">Tue</span>\n          <span className=\"day\">Wed</span>\n          <span className=\"day\">Thu</span>\n          <span className=\"day\">Fri</span>\n          <span className=\"day\">Sat</span>\n          <span className=\"day\">Sun</span>\n          {days.map((day) => calendarMap(day))}\n        </div>\n      </div>\n    );\n  }\n}\n\nCalendarInput.propTypes = {\n  showing: PropTypes.bool,\n  handleDue: PropTypes.func,\n  toggle: PropTypes.func,\n};\n\nexport default CalendarInput;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { dateToday } from \"../functions/kemplet-date\";\n\nimport CalendarInput from \"./CalendarInput\";\n\nclass Add extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      todoLists: [],\n      due: \"\",\n      showingCalendar: false,\n    };\n  }\n\n  updateTitle = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  toggleCalendar = (arg) => {\n    if (arg !== undefined) {\n      this.setState({ showingCalendar: arg });\n    } else {\n      this.setState({ showingCalendar: !this.state.showingCalendar });\n    }\n  };\n\n  updateDue = (e) => {\n    this.setState({\n      due: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title, todoLists, due } = this.state;\n    const { addTask, toggle } = this.props;\n    if (title) {\n      addTask({\n        title,\n        todoLists,\n        due,\n      });\n      toggle();\n    }\n  };\n\n  handleDue = (selected) => {\n    this.setState({ due: selected });\n  };\n\n  render() {\n    const { title, due } = this.state;\n    const today = dateToday(0);\n    const tomorrow = dateToday(1);\n\n    return (\n      <div className=\"modal\">\n        <form className=\"addContainer\">\n          <div className=\"inputMotion\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={this.updateTitle}\n              required\n            />\n            <span>Title:</span>\n          </div>\n\n          <div className=\"inputMotion\">\n            <input\n              type=\"text\"\n              name=\"due\"\n              className=\"dateInput\"\n              autoComplete=\"off\"\n              value={due}\n              required\n              onFocus={() => this.toggleCalendar(true)}\n            />\n            <span>Due:</span>\n          </div>\n          <CalendarInput\n            showing={this.state.showingCalendar}\n            handleDue={this.handleDue}\n            toggle={this.toggleCalendar}\n          />\n          <div className=\"dueOptions\">\n            <input\n              className=\"active\"\n              type=\"button\"\n              value=\"none\"\n              onClick={() => {\n                this.handleDue(\"\");\n                this.toggleCalendar(false);\n              }}\n            />\n            <input\n              type=\"button\"\n              value=\"today\"\n              onClick={() => {\n                this.handleDue(today);\n                this.toggleCalendar(false);\n              }}\n            />\n            <input\n              type=\"button\"\n              value=\"tomorrow\"\n              onClick={() => {\n                this.handleDue(tomorrow);\n                this.toggleCalendar(false);\n              }}\n            />\n          </div>\n          <input\n            className=\"addSubmit\"\n            type=\"submit\"\n            value=\"add\"\n            onClick={this.handleSubmit}\n          />\n        </form>\n        <div className=\"modalBackground\" onClick={this.props.toggle} />\n      </div>\n    );\n  }\n}\n\nAdd.propTypes = {\n  addTask: PropTypes.func,\n  toggle: PropTypes.func,\n};\n\nexport default Add;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import DayNight from \"./DayNight\";\nimport add from \"../images/add.svg\";\nimport Add from \"./Add\";\n\nfunction Menu(props) {\n  const [displayAdd, toggleAdd] = useState(false);\n  const { addTask } = props;\n\n  const toggle = () => {\n    toggleAdd(!displayAdd);\n  };\n\n  return (\n    <div className=\"menu\">\n      {/* <DayNight /> */}\n      <button className=\"addBtn\" type=\"button\" onClick={() => toggle()}>\n        <img src={add} alt=\"add button\" />\n      </button>\n      {displayAdd && <Add toggle={toggle} addTask={addTask} />}\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  addTask: PropTypes.func,\n};\n\nexport default Menu;\n","import React from \"react\";\n\nfunction Today({ tasks }) {\n  const dateOptions = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n\n  const date = new Intl.DateTimeFormat(\"en-US\", dateOptions).format(new Date());\n\n  function isDue(obj) {\n    return new Date(obj.due).toDateString() === new Date().toDateString();\n  }\n\n  const dueToday = tasks.filter(isDue);\n\n  return (\n    <div className=\"today card\">\n      <h1>{`${date}`}</h1>\n      {dueToday.length >= 1 && (\n        <div className=\"dueToday\">\n          <span className=\"dueTitle\">Due today</span>\n          <ul>\n            {dueToday.map((task) => (\n              <li key={task.id}>{task.title}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Today;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Todo(props) {\n  const { todo } = props;\n  const [completed, updateCompleted] = useState(todo.completed);\n\n  useEffect(() => {\n    todo.completed = completed;\n  });\n\n  return (\n    <li className=\"todoCheck\">\n      <input\n        type=\"checkbox\"\n        readOnly\n        checked={completed}\n        onClick={() => updateCompleted(!completed)}\n      />\n      <label>{todo.todo}</label>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.object,\n};\n\nexport default Todo;\n","import React, { Component } from \"react\";\n\nimport Todo from \"./Todo\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: {\n        todo: \"\",\n        completed: false,\n      },\n    };\n  }\n\n  updateInput = (e) => {\n    this.setState({\n      todo: { ...this.state.todo, todo: e.target.value },\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { todo } = this.state;\n    const { list } = this.props;\n    list.todos.push(todo);\n    this.setState({\n      todo: { todo: \"\", completed: false },\n    });\n  };\n\n  render() {\n    const { list } = this.props;\n    const { todo } = this.state;\n    // const tasks = list.todos.length;\n    // const completeTask = list.todos.filter(todo => todo.completed == true).length;\n    return (\n      <div className=\"todoList\">\n        <h2>{list.title}</h2>\n        <ul>\n          {list.todos.map((todo) => (\n            <Todo todo={todo} key={todo.todo} />\n          ))}\n          <form>\n            <input\n              type=\"text\"\n              name=\"addTodo\"\n              className=\"addTodo\"\n              autoComplete=\"off\"\n              placeholder=\"Add item\"\n              value={todo.todo}\n              onChange={this.updateInput}\n            />\n            <input\n              className=\"submitTodo\"\n              type=\"submit\"\n              value=\"+\"\n              onClick={this.handleSubmit}\n            />\n          </form>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from \"react\";\n\nfunction Options({ id, removeTask }) {\n  return (\n    <div className=\"options\">\n      <input\n        className=\"option\"\n        type=\"button\"\n        value=\"remove board\"\n        onClick={() => removeTask(id)}\n      />\n      {/* <input\n        className=\"option\"\n        type=\"button\"\n        value=\"rename board\"\n        onClick={}\n      /> */}\n    </div>\n  );\n}\n\nexport default Options;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TodoList from \"./TodoList\";\nimport Progress from \"./Progress\";\nimport Options from \"./Options\";\n\nclass TaskDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n  }\n\n  updateInput = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let adding = {\n      title: this.state.title,\n      todos: [],\n    };\n    this.props.task.todoLists.push(adding);\n    this.setState({\n      title: \"\",\n    });\n  };\n\n  render() {\n    const { task, removeTask } = this.props;\n\n    return (\n      <div className=\"taskDetailContainer card\">\n        {/* <Progress list={task.todoLists} /> */}\n        <div className=\"taskDetails\">\n          {/* <Options id={task.id} removeTask={removeTask} /> */}\n          <h1 onClick={this.titleInput}>{task.title}</h1>\n          <input\n            type=\"button\"\n            value=\"remove\"\n            className=\"remove\"\n            onClick={() => removeTask(task.id)}\n          />\n          <span>{`Due: ${task.due.slice(0, -5)}`}</span>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.updateInput}\n              className=\"listText\"\n            />\n            <input type=\"submit\" value=\"add list\" />\n          </form>\n          <div className=\"todoLists\">\n            {task.todoLists.map((list) => (\n              <TodoList list={list} key={list.title} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTaskDetail.propTypes = {\n  task: PropTypes.object,\n};\n\nexport default TaskDetail;\n","import React, { Component } from \"react\";\nimport { quickId } from \"quickids\";\n\nimport { dateToday } from \"../functions/kemplet-date\";\n\nimport Menu from \"./Menu\";\nimport Today from \"./Today\";\nimport TaskDetail from \"./TaskDetail\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [\n        {\n          title: \"Welcome\",\n          due: dateToday(0),\n          id: \"welcome\",\n          complete: false,\n          todoLists: [\n            {\n              title: \"Add a board\",\n              id: \"welcome-List-1\",\n              completed: false,\n              todos: [\n                {\n                  todo:\n                    \"to add a task board, click the add button at the top of the window.\",\n                  completed: false,\n                },\n              ],\n            },\n            {\n              title: \"Add a todo list\",\n              id: \"welcome-List-2\",\n              completed: false,\n              todos: [\n                {\n                  todo:\n                    \"add a list to the board by pressing the add button at the top of the board.\",\n                  completed: false,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      dueToday: [],\n      openTask: {},\n    };\n  }\n\n  changeTaskId = (id) => {\n    this.setState({ viewTaskId: id });\n  };\n\n  addTask = (task) => {\n    const { tasks } = this.state;\n    task.id = quickId();\n    this.setState({\n      tasks: [...tasks, task],\n      openTask: task,\n    });\n  };\n\n  openTask = (task) => {\n    this.setState({\n      openTask: task,\n    });\n  };\n\n  removeTask = (id) => {\n    this.setState({\n      tasks: this.state.tasks.filter((task) => task.id !== id),\n      openTask: {},\n    });\n  };\n\n  componentDidMount() {\n    this.state.tasks[0] && this.openTask(this.state.tasks[0]);\n  }\n\n  render() {\n    const { tasks, openTask } = this.state;\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return (\n      <div className=\"App\">\n        <Menu addTask={this.addTask} />\n        <div className=\"content\">\n          <div className=\"tasks\">\n            <div className=\"taskContent\">\n              <div className=\"taskList\">\n                <Today tasks={tasks} />\n                {tasks.map((task) => (\n                  <div\n                    key={task.id}\n                    className=\"card boardBtn\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.openTask(task);\n                    }}\n                  >\n                    <div>{task.title}</div>\n                    {new Date(task.due).toDateString() ===\n                    today.toDateString() ? (\n                      <span className=\"dueToday\">today</span>\n                    ) : (\n                      <span>{task.due.slice(0, -5)}</span>\n                    )}\n                  </div>\n                ))}\n              </div>\n              {openTask.title && (\n                <TaskDetail task={openTask} removeTask={this.removeTask} />\n              )}\n            </div>\n          </div>\n          {/* <Calendar /> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","exports.dateToday = (add) => {\n  const date = new Date();\n  let month = (date.getMonth() + 1).toString();\n  let day = date.getDate() + add;\n  const year = date.getFullYear();\n  const returnDate = [month, day, year].join(\"/\");\n  return returnDate;\n};\n"],"sourceRoot":""}